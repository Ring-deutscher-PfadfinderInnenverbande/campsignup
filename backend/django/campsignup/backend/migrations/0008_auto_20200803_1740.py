# Generated by Django 3.0.8 on 2020-08-03 17:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0007_auto_20200802_1820'),
    ]

    operations = [
        migrations.AlterField(
            model_name='group',
            name='agbAgreedContact',
            field=models.BooleanField(default=False, help_text='Gruppenverantwortlicher hat AGB zugestimmt', verbose_name='AGB-Einverständnis Gruppenverantwortlicher'),
        ),
        migrations.AlterField(
            model_name='group',
            name='agbAgreedOrg',
            field=models.BooleanField(default=False, help_text='Gruppierung hat AGB zugestimmt', verbose_name='AGB-Einverständnis Gruppe'),
        ),
        migrations.AlterField(
            model_name='group',
            name='allowEarlyDeparture',
            field=models.BooleanField(default=False, help_text='Gruppierung erlaubt den Teilnehmern das frühzeitige abreisen', verbose_name='Frühzeitige Abreise erlauben'),
        ),
        migrations.AlterField(
            model_name='group',
            name='billingAddress',
            field=models.CharField(blank=True, help_text='Die Rechnungsadresse der Gruppierung', max_length=60, verbose_name='Rechnungsadresse'),
        ),
        migrations.AlterField(
            model_name='group',
            name='communalEarlyDeparture',
            field=models.BooleanField(default=False, help_text='Bitte bei der Anpassung der Preise beachten. Falls der Stamm keine frühe Abreise organisiert, muss diese individuell von den Erziehungsberechtigten organisiert werden.', verbose_name='Organisation der früheren Abreise'),
        ),
        migrations.AlterField(
            model_name='group',
            name='contactAddress',
            field=models.CharField(blank=True, help_text='Adresse der Person, welche die Gruppierung repräsentiert und kontaktiert werden soll', max_length=60, verbose_name='Adresse Gruppenverantwortlicher'),
        ),
        migrations.AlterField(
            model_name='group',
            name='contactMail',
            field=models.CharField(blank=True, help_text='Mail der Person, welche die Gruppierung repräsentiert und kontaktiert werden soll', max_length=60, verbose_name='Mail Gruppenverantwortlicher'),
        ),
        migrations.AlterField(
            model_name='group',
            name='contactName',
            field=models.CharField(blank=True, help_text='Name der Person, welche die Gruppierung repräsentiert und kontaktiert werden soll', max_length=60, verbose_name='Name Gruppenverantwortlicher'),
        ),
        migrations.AlterField(
            model_name='group',
            name='contactPhone',
            field=models.CharField(blank=True, help_text='Telefon der Person, welche die Gruppierung repräsentiert und kontaktiert werden soll', max_length=60, verbose_name='Telefon Gruppenverantwortlicher'),
        ),
        migrations.AlterField(
            model_name='group',
            name='existingIntlGroup',
            field=models.CharField(blank=True, help_text='Falls bereits eine Partnerschaft mit einer internationalen Gruppe besteht, die ebenfalls auf das Lager fährt, könnt ihr hier den Namen angeben. Als internationale Gruppe gebt ihr hier den Namen eurer deutschen Partnergruppe an, falls bereits eine Partnerschaft besteht.', max_length=60, verbose_name='Name einer vorhandenen Partnergruppe'),
        ),
        migrations.AlterField(
            model_name='group',
            name='extraText',
            field=models.CharField(blank=True, help_text='Ihr könnt hier optional einen Text hinterlegen, der Euren Teilnehmenden bei der Registrierung angezeigt wird, etwa für weitere Hinweise zum Ablauf und der Bezahlung.', max_length=60, verbose_name='Informationen für die Teilnehmer'),
        ),
        migrations.AlterField(
            model_name='group',
            name='firstPlacementChoice',
            field=models.CharField(blank=True, help_text='Unterlager-Wunsch der Gruppierung. 1. Wahl', max_length=60, verbose_name='Unterlager, 1. Wahl'),
        ),
        migrations.AlterField(
            model_name='group',
            name='isIntlGroup',
            field=models.BooleanField(default=False, help_text='Auswahl, ob Gruppierung aus dem Ausland kommt.', verbose_name='Internationale Gruppierung'),
        ),
        migrations.AlterField(
            model_name='group',
            name='mixedOrg',
            field=models.BooleanField(default=False, help_text='Falls dieser Haken gesetzt ist, müssen Teilnehmer bei der Anmeldung ihre eigene Verbandszugehörigkeit bestätigen.', verbose_name='Individuelle Verbandszugehörigkeit'),
        ),
        migrations.AlterField(
            model_name='group',
            name='name',
            field=models.CharField(blank=True, help_text='Der Name der Gruppierung', max_length=60, verbose_name='Gruppierungsname'),
        ),
        migrations.AlterField(
            model_name='group',
            name='parentOrg',
            field=models.CharField(blank=True, help_text='Pfadfinder-Verband des Teilnehmers, z.B. DPSG, PSG, BDP ...', max_length=60, verbose_name='Verbandszugehörigkeit'),
        ),
        migrations.AlterField(
            model_name='group',
            name='parentOrgOther',
            field=models.CharField(blank=True, help_text='Freitext-Feld für Verbandszugehörigkeit (z.B. bei internationalen Teilnehmern', max_length=60, verbose_name='Weitere Verbandszugehörigkeit'),
        ),
        migrations.AlterField(
            model_name='group',
            name='priceAdjustments',
            field=models.CharField(blank=True, help_text='Damit die Teilnehmenden bei der Anmeldung den für sie gültigen Preis sehen können.', max_length=60, verbose_name='Individuelle Preise'),
        ),
        migrations.AlterField(
            model_name='group',
            name='publicTransport',
            field=models.CharField(blank=True, help_text="Wir müssen die öffentlichen Verkehrsbetriebe rechtzeitig über die zu erwartenden Passagierzahlen informieren, damit diese genug Kapazitäten bereitstellen können. Falls euer Stamm plant, mit den öffentlichen Verkehrsmitteln per Bus oder Bahn anzureisen, gebt dies bitte hier an. Wenn ihr die Anreise anderweitig organisiert, etwa mit einem eigenen Bus, wählt bitte 'Keine Anreise mit ÖPNV'", max_length=60, verbose_name='Anreise mit öffentlichen Verkehrsmitteln'),
        ),
        migrations.AlterField(
            model_name='group',
            name='requireEarlyDeparture',
            field=models.BooleanField(default=False, help_text='Wichtel/Wölflinge haben nur die Option, früh abzureisen.', verbose_name='Verpflichtende frühere Abreise für Wichtel/Wölflinge'),
        ),
        migrations.AlterField(
            model_name='group',
            name='secondPlacementChoice',
            field=models.CharField(blank=True, help_text='Unterlager-Wunsch der Gruppierung. 2. Wahl', max_length=60, verbose_name='Unterlager, 2. Wahl'),
        ),
        migrations.AlterField(
            model_name='group',
            name='thirdPlacementChoice',
            field=models.CharField(blank=True, help_text='Unterlager-Wunsch der Gruppierung. 3. Wahl', max_length=60, verbose_name='Unterlager, 3. Wahl'),
        ),
        migrations.AlterField(
            model_name='group',
            name='wantIntlGroup',
            field=models.BooleanField(default=False, help_text='Zeigt an, ob die Gruppierung eine internationale Partnergruppierung aufnehmen möchte.', verbose_name='Aufnahme Internationale Gruppierung'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='dayVisitor',
            field=models.BooleanField(default=False, help_text='Tagesgast, falls der Teilnehmer nicht ganze Zeit da ist.', verbose_name='Tagesgast'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='dayVisitorArrival',
            field=models.DateField(blank=True, help_text='Anreisetag bei Tagesgast.', verbose_name='Anreisetag'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='dayVisitorArrivalMeal',
            field=models.CharField(blank=True, choices=[('Frühstück', 'Frühstück'), ('Mittagessen', 'Mittagessen'), ('Abendessen', 'Abendessen')], help_text='Letzte noch genutzte Malzeit am Anreisetag.', max_length=60, verbose_name='Essen am Anreisetag'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='dayVisitorDeparture',
            field=models.DateField(blank=True, help_text='Abreisetag bei Tagesgast.', verbose_name='Abreisetag'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='dayVisitorDepartureMeal',
            field=models.CharField(blank=True, choices=[('Frühstück', 'Frühstück'), ('Mittagessen', 'Mittagessen'), ('Abendessen', 'Abendessen')], help_text='Letzte noch genutzte Malzeit am Abreisetag.', max_length=60, verbose_name='Essen am Abreisetag'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='emergencyContacts',
            field=models.ManyToManyField(default=None, help_text='Falls weitere Notfall-Kontaktdaten benötigt werden', null=True, related_name='participants_emergency', to='backend.Contact', verbose_name='Weitere Notfall-Kontaktdaten'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='familyMember',
            field=models.CharField(blank=True, help_text='Für die Buchung des Familienpreises muss hier der Name des bereits angemeldeten, den Vollpreis zahlenden Familienmitglieds angegeben werden.', max_length=60, verbose_name='Name eines weiteren Familienmitglieds'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='foodOptions',
            field=models.CharField(choices=[('Frühstück', 'Frühstück'), ('Mittagessen', 'Mittagessen'), ('Abendessen', 'Abendessen')], help_text='Auswahl der Essens-Art.', max_length=60, verbose_name='Essen'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='gender',
            field=models.CharField(blank=True, choices=[('weiblicher Schnitt', 'weiblicher Schnitt'), ('männlicher Schnitt', 'männlicher Schnitt')], help_text='Wie das Lager-Shirt geschnitten sein soll', max_length=60, verbose_name='T-Shirt-Schnitt'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='guardianContact',
            field=models.ForeignKey(default=None, help_text='Die Kontaktdaten des/der Erziehungsberechtigten', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='participants_guardian', to='backend.Contact', verbose_name='Erziehungsberechtigter Kontaktdaten'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='medicalSheet',
            field=models.BooleanField(default=False, help_text='Gesundheitsbogen ausgedruckt und ausgefüllt, wird mitgebracht.', verbose_name='Gesundheitsbogen'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='ownContact',
            field=models.ForeignKey(default=None, help_text='Die Kontaktdaten des Teilnehmers', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='participants_own', to='backend.Contact', verbose_name='Eigene Kontaktdaten'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='parentOrg',
            field=models.CharField(blank=True, choices=[('DPSG Rottenburg-Stuttgart', 'DPSG Rottenburg-Stuttgart'), ('PSG Rottenburg-Stuttgart', 'PSG Rottenburg-Stuttgart'), ('DPSG Freiburg', 'DPSG Freiburg'), ('PSG Freiburg', 'PSG Freiburg'), ('VCP Baden', 'VCP Baden'), ('VCP Württemberg', 'VCP Württemberg'), ('BdP Baden-Württemberg', 'BdP Baden-Württemberg'), ('International guest', 'International guest')], help_text='Pfadfinder-Verband des Teilnehmers, z.B. DPSG, PSG, BDP ...', max_length=60, verbose_name='Verbandszugehörigkeit'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='parentOrgOther',
            field=models.CharField(blank=True, help_text='Freitext-Feld für Verbandszugehörigkeit (z.B. bei internationalen Teilnehmern', max_length=60, verbose_name='Weitere Verbandszugehörigkeit'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='participantType',
            field=models.CharField(choices=[('Stammesmitglied (außer Leiter)', 'Stammesmitglied (außer Leiter)'), ('Leiter*in', 'Leiter*in'), ('Kinder unter sechs Jahren', 'Kinder unter sechs Jahren'), ('Ehemalige', 'Ehemalige'), ('Helfende', 'Helfende')], help_text='Teilnehmer Typ, evtl. können wir darüber Berechtigungen ableiten?', max_length=60, verbose_name='Teilnehmerkategorie'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='rank',
            field=models.CharField(blank=True, choices=[('Wichtel (ab 6 Jahren)', 'Wichtel (ab 6 Jahren)'), ('Pfadis (ab 10 Jahren)', 'Pfadis (ab 10 Jahren)'), ('Caravelle (ab 13 Jahren)', 'Caravelle (ab 13 Jahren)'), ('Ranger (ab 16 Jahren)', 'Ranger (ab 16 Jahren)'), ('Cubs (6 years or older)', 'Cubs (6 years or older)'), ('Scouts (10 years or older)', 'Scouts (10 years or older)'), ('Venturing (13 years or older)', 'Venturing (13 years or older)'), ('Rover (16 years or older)', 'Rover (16 years or older)'), ('Wölflinge (ab 7 Jahren)', 'Wölflinge (ab 7 Jahren)'), ('Pfadfinder (ab 11 Jahren)', 'Pfadfinder (ab 11 Jahren)'), ('Ranger & Rover (ab 16 Jahren)', 'Ranger & Rover (ab 16 Jahren)'), ('Wölflinge (ab 6 Jahren)', 'Wölflinge (ab 6 Jahren)'), ('Jungpfadfinder (ab 10 Jahren)', 'Jungpfadfinder (ab 10 Jahren)'), ('Pfadfinder (ab 13 Jahren)', 'Pfadfinder (ab 13 Jahren)'), ('Rover (ab 16 Jahren)', 'Rover (ab 16 Jahren)'), ('Jungpfadfinder (ab 9 Jahren)', 'Jungpfadfinder (ab 9 Jahren)'), ('Pfadfinder (ab 12 Jahren)', 'Pfadfinder (ab 12 Jahren)')], help_text='Die Altersstufe des Teilnehmers, da unterschiedlich je nach Verband, muss das im Frontend gefiltert sein.', max_length=60, verbose_name='Altersstufe'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='rankLeader',
            field=models.CharField(blank=True, help_text='Falls Teilnehmer ein Stufenleiter ist, steht hier die Stufe.', max_length=60, verbose_name='Stufenleiter'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='smallChildRef',
            field=models.CharField(blank=True, help_text="Die Kategorie 'Kinder unter sechs Jahren' ist nur für Kinder gedacht, die mit einer erziehungsberechtigten Person anreisen und nicht am Programm teilnehmen.", max_length=60, verbose_name='Erziehungsberechtigter'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffChildcare',
            field=models.CharField(blank=True, help_text='Kinderbetreuung für die Kinder des Helfers. Alle mitgebrachten Kinder müssen separat zum Lager angemeldet werden.', max_length=60, verbose_name='Kinderbetreuung'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffDays',
            field=models.CharField(blank=True, help_text='An welchen Tagen stehst der Teilnehmer als Helfer zur Verfügung? Eigentlich ein Date-Array, aber da muss ich noch schauen, wie das am besten in DB landet. Denke String List ist am einfachsten.', max_length=60, verbose_name='Tage als Helfer'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffFancyAwarenessThingy',
            field=models.BooleanField(default=False, help_text='Der Teilnehmer hat die Selbstverpflichtungserkärung gelesen, ist damit einverstanden und bringt sie unterschrieben zum Lager mit', verbose_name='Selbstverpflichtungserkärung'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffFreeDayVisitor',
            field=models.BooleanField(default=False, help_text='Nur zu Auf- und/oder Abbau da, daher kostenlos.', verbose_name='Kostenloser Tageshelfender'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffInsured',
            field=models.BooleanField(default=False, help_text='Zeigt an, ob der Helfer haftpflicht versichert ist. Die Haftpflichtversicherung kann sowohl über einen Pfadfinderverband und Institution oder eine private Haftpflicht bestehen.', verbose_name='Haftpflicht versichert'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffLanguages',
            field=models.CharField(blank=True, help_text='Liste mit Sprachen die der Helfer sprechen kann (sehr gut bis fließend).', max_length=60, verbose_name='Sprachkentnisse'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffLanguagesOther',
            field=models.CharField(blank=True, help_text='Liste mit Sprachen die der Helfer nicht so gut sprechen kann', max_length=60, verbose_name='Sonstige Sprachen'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffOnsiteGuardian',
            field=models.CharField(blank=True, help_text='Für minderjährige Helfer die Aufsichtperson auf dem Lager.', max_length=60, verbose_name='Aufsichtsperson'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffProfession',
            field=models.CharField(blank=True, help_text='Ausgeübter Beruf des Helfers (falls relevant)', max_length=60, verbose_name='Ausgeübter Beruf'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffQualChainsawLicense',
            field=models.BooleanField(default=False, help_text='Der Helfende verfügt über einen Kettensägen-Schein und darf eine Kettensäge führen.', verbose_name='Kettensägenschein'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffQualDrivingLicense',
            field=models.CharField(blank=True, choices=[('---', '---'), ('B1', 'B1'), ('B', 'B'), ('BE', 'BE'), ('C', 'C'), ('D', 'D')], help_text='Höchstwertigste Führerscheinklasse des Helfers.', max_length=60, verbose_name='Führerscheinklasse'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffQualElectrician',
            field=models.BooleanField(default=False, help_text='Helfer ist ein gelernter Elektriker', verbose_name='Elektrikerausbildung'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffQualProfessionalDriver',
            field=models.BooleanField(default=False, help_text='Der helfende ist ein Berufsfahrer mit Personenbeförderungsschein(Ja/Nein)', verbose_name='Personenbeförderungsschein'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffSubcamp',
            field=models.CharField(blank=True, choices=[('Osterinsel', 'Osterinsel'), ('Prismanien', 'Prismanien'), ('Wasteland', 'Wasteland'), ('Erde Feuer Wasser Luft', 'Erde Feuer Wasser Luft'), ('Brownsea Island', 'Brownsea Island'), ('Atlantis', 'Atlantis'), ('Neupfadland', 'Neupfadland'), ('St. Goldvein', 'St. Goldvein'), ('Espuertes', 'Espuertes')], help_text='In welchem Unterlager sich der Helfende engangieren möchte.', max_length=60, verbose_name='Mithilfe in Unterlager'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffSubtype',
            field=models.CharField(blank=True, choices=[('Cafe', 'Cafe'), ('Themenjurte', 'Themenjurte'), ('Ausrüster', 'Ausrüster'), ('Infrastruktur', 'Infrastruktur'), ('Inhalt', 'Inhalt'), ('Internationales', 'Internationales'), ('Springer', 'Springer')], help_text='In welchem Bereich der Helfer sich engagieren möchte', max_length=60, verbose_name='Mithilfe in Bereich'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffTentExtra',
            field=models.CharField(blank=True, help_text='Falls weitere Plätze im Zelt vorhanden sind, hier Anzahl angeben', max_length=60, verbose_name='Freie Schlafplätze im Zelt'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='staffType',
            field=models.CharField(blank=True, choices=[('Mithilfe in einem Unterlager', 'Mithilfe in einem Unterlager'), ('Mithilfe in der zentralen Organisation', 'Mithilfe in der zentralen Organisation')], help_text='Ob der Helfer in einem Bereich oder Unterlager sich engangieren möchte.', max_length=60, verbose_name='Helfendenkategorie'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='tshirtSize',
            field=models.CharField(blank=True, choices=[('Wichtel (ab 6 Jahren)', 'Wichtel (ab 6 Jahren)'), ('Pfadis (ab 10 Jahren)', 'Pfadis (ab 10 Jahren)'), ('Caravelle (ab 13 Jahren)', 'Caravelle (ab 13 Jahren)'), ('Ranger (ab 16 Jahren)', 'Ranger (ab 16 Jahren)'), ('Cubs (6 years or older)', 'Cubs (6 years or older)'), ('Scouts (10 years or older)', 'Scouts (10 years or older)'), ('Venturing (13 years or older)', 'Venturing (13 years or older)'), ('Rover (16 years or older)', 'Rover (16 years or older)'), ('Wölflinge (ab 7 Jahren)', 'Wölflinge (ab 7 Jahren)'), ('Pfadfinder (ab 11 Jahren)', 'Pfadfinder (ab 11 Jahren)'), ('Ranger & Rover (ab 16 Jahren)', 'Ranger & Rover (ab 16 Jahren)'), ('Wölflinge (ab 6 Jahren)', 'Wölflinge (ab 6 Jahren)'), ('Jungpfadfinder (ab 10 Jahren)', 'Jungpfadfinder (ab 10 Jahren)'), ('Pfadfinder (ab 13 Jahren)', 'Pfadfinder (ab 13 Jahren)'), ('Rover (ab 16 Jahren)', 'Rover (ab 16 Jahren)'), ('Jungpfadfinder (ab 9 Jahren)', 'Jungpfadfinder (ab 9 Jahren)'), ('Pfadfinder (ab 12 Jahren)', 'Pfadfinder (ab 12 Jahren)')], help_text='T-Shirt Größe für Lagershirt', max_length=60, verbose_name='T-Shirt Größe'),
        ),
    ]
